version: '3.5'
services:
  user-db:
    build: postgresql
    depends_on:
      - pgadmin
    image: taskmanager_postgresql:1.0.5
    restart: always
    environment:
      POSTGRES_DB: user-service
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    volumes:
      - ./postgresql/user-service/ddl/0_init.sql:/docker-entrypoint-initdb.d/0_init.sql
      - ./postgres-data/user-service:/var/lib/postgresql/data
    networks:
      - taskmanager_ntwrk

  audit-db:
    build: postgresql
    depends_on:
      - pgadmin
    image: taskmanager_postgresql:1.0.6
    restart: always
    environment:
      POSTGRES_DB: audit-service
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    volumes:
      - ./postgresql/audit-service/ddl/0_init.sql:/docker-entrypoint-initdb.d/0_init.sql
      - ./postgres-data/audit-service:/var/lib/postgresql/data
    networks:
      - taskmanager_ntwrk

  task-db:
    build: postgresql
    depends_on:
      - pgadmin
    image: taskmanager_postgresql:1.0.2
    restart: always
    environment:
      POSTGRES_DB: task-service
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    volumes:
      - ./postgresql/task-service/ddl/0_init.sql:/docker-entrypoint-initdb.d/0_init.sql
      - ./postgres-data/task-service:/var/lib/postgresql/data
    networks:
      - taskmanager_ntwrk

  report-db:
    build: postgresql
    depends_on:
      - pgadmin
    image: taskmanager_postgresql:1.0.5
    restart: always
    environment:
      POSTGRES_DB: report-service
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    volumes:
      - ./postgresql/report-service/ddl/0_init.sql:/docker-entrypoint-initdb.d/0_init.sql
      - ./postgres-data/report-service:/var/lib/postgresql/data
    networks:
      - taskmanager_ntwrk

  pgadmin:
    build: pgadmin
    image: taskmanager_pgadmin:1.0.11
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "82:80"
    networks:
      - taskmanager_ntwrk

  swagger-ui:
    build: swagger-ui
    image: taskmanager_swagger-ui:1.0.3
    ports:
      - "81:8080"
    networks:
      - taskmanager_ntwrk

  eureka-naming-service:
    build: eureka-naming-service
    image: eureka-naming-service:1.0.17
    ports:
      - "84:8080"
    environment:
      SERVER_PORT: 8080
    networks:
      - taskmanager_ntwrk

  user-service:
    build: user-service
    depends_on:
      - user-db
      - eureka-naming-service
    image: taskmanager_user-service:1.0.45
    networks:
      - taskmanager_ntwrk

  audit-service:
    build: audit-service
    depends_on:
      - audit-db
      - eureka-naming-service
    image: taskmanager_audit-service:1.0.29
    networks:
      - taskmanager_ntwrk

  task-service:
    build: task-service
    depends_on:
      - task-db
      - eureka-naming-service
    image: taskmanager_task-service:1.0.4
    networks:
      - taskmanager_ntwrk

  report-service:
    build: report-service
    depends_on:
      - report-db
      - eureka-naming-service
    image: taskmanager_report-service:1.0.7
    networks:
      - taskmanager_ntwrk

  notification-service:
    build: notification-service
    depends_on:
      - eureka-naming-service
    image: taskmanager_notification-service:1.0.2
    networks:
      - taskmanager_ntwrk

  proxy:
    build: proxy
    depends_on:
      - user-service
      - audit-service
      - task-service
      - report-service
    image: taskmanager_proxy:1.0.6
    ports:
      - "80:80"
    networks:
      - taskmanager_ntwrk

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9090:9090"
    volumes:
      - minio-data:/~
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server ~/minio --console-address :9090
    networks:
      - taskmanager_ntwrk

volumes:
  minio-data:

networks:
  taskmanager_ntwrk:
    name: taskmanager_ntwrk